{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\Chat-App\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Message from './Message';\nimport TypingIndicator from './TypingIndicator';\nimport EmojiPicker from './EmojiPicker';\nimport Toast from './Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showInputEmojiPicker, setShowInputEmojiPicker] = useState(false);\n  const [reactionPickerForMsgId, setReactionPickerForMsgId] = useState(null);\n  const [typingUser, setTypingUser] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [notification, setNotification] = useState('');\n  const messagesEndRef = useRef();\n  const socketRef = useRef();\n  const typingTimeoutRef = useRef();\n  useEffect(() => {\n    socketRef.current = io('http://localhost:3001', {\n      query: {\n        username\n      }\n    });\n\n    // Listen for regular messages\n    socketRef.current.on('message', msg => {\n      setMessages(m => {\n        if (m.find(existing => existing.id === msg.id)) {\n          return m.map(existing => existing.id === msg.id ? {\n            ...existing,\n            status: msg.status\n          } : existing);\n        }\n        return [...m, msg];\n      });\n      if (msg.user !== username) {\n        socketRef.current.emit('messageReceived', {\n          msgId: msg.id,\n          senderSocketId: msg.senderSocketId\n        });\n        socketRef.current.emit('readMessage', {\n          msgId: msg.id,\n          senderSocketId: msg.senderSocketId\n        });\n      }\n    });\n\n    // Listen for file messages\n    socketRef.current.on('fileMessage', msg => {\n      setMessages(m => {\n        if (m.find(existing => existing.id === msg.id)) {\n          return m.map(existing => existing.id === msg.id ? {\n            ...existing,\n            status: msg.status\n          } : existing);\n        }\n        return [...m, msg];\n      });\n      if (msg.user !== username) {\n        socketRef.current.emit('messageReceived', {\n          msgId: msg.id,\n          senderSocketId: msg.senderSocketId\n        });\n        socketRef.current.emit('readMessage', {\n          msgId: msg.id,\n          senderSocketId: msg.senderSocketId\n        });\n      }\n    });\n\n    // Listen for system messages (user joined/left)\n    socketRef.current.on('systemMessage', msg => {\n      setMessages(m => [...m, {\n        ...msg,\n        system: true\n      }]);\n    });\n\n    // Listen for status updates\n    socketRef.current.on('messageStatusUpdate', ({\n      msgId,\n      status\n    }) => {\n      setMessages(m => m.map(msg => msg.id === msgId ? {\n        ...msg,\n        status\n      } : msg));\n    });\n    socketRef.current.on('userJoined', msg => showNotification(msg));\n    socketRef.current.on('userLeft', msg => showNotification(msg));\n    socketRef.current.on('activeUsers', users => setActiveUsers(users));\n    socketRef.current.on('typing', user => {\n      setTypingUser(user);\n      clearTimeout(typingTimeoutRef.current);\n      typingTimeoutRef.current = setTimeout(() => setTypingUser(''), 4000);\n    });\n    socketRef.current.on('stopTyping', () => {\n      setTypingUser('');\n      clearTimeout(typingTimeoutRef.current);\n    });\n    socketRef.current.on('reactUpdate', ({\n      msgId,\n      emoji\n    }) => setMessages(m => m.map(msg => msg.id === msgId ? {\n      ...msg,\n      reactions: [...(msg.reactions || []), emoji]\n    } : msg)));\n    return () => {\n      socketRef.current.disconnect();\n      clearTimeout(typingTimeoutRef.current);\n    };\n  }, [username]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const showNotification = msg => {\n    setNotification(msg);\n    setTimeout(() => setNotification(\"\"), 2200);\n  };\n  const handleChange = e => {\n    setMessageInput(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      if (messageInput.trim()) {\n        sendMessage(messageInput);\n      }\n    }\n  };\n  const sendMessage = (text, replyTo) => {\n    if (!text.trim()) return;\n    const message = {\n      id: Date.now(),\n      text,\n      user: username,\n      replyTo: replyTo || null,\n      avatarUrl: `https://ui-avatars.com/api/?name=${username}&background=random`,\n      senderSocketId: socketRef.current.id,\n      status: 'sent'\n    };\n    socketRef.current.emit('sendMessage', message);\n    setMessageInput('');\n    setShowInputEmojiPicker(false);\n    socketRef.current.emit('stopTyping', username);\n  };\n  const sendFile = () => {\n    if (!selectedFile) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const base64Data = e.target.result;\n      const fileMessage = {\n        id: Date.now(),\n        user: username,\n        avatarUrl: `https://ui-avatars.com/api/?name=${username}&background=random`,\n        senderSocketId: socketRef.current.id,\n        fileName: selectedFile.name,\n        fileType: selectedFile.type,\n        data: base64Data,\n        status: 'sent'\n      };\n      socketRef.current.emit('sendFile', fileMessage);\n      setSelectedFile(null);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n  const handleTyping = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit('typing', username);\n    clearTimeout(typingTimeoutRef.current);\n    typingTimeoutRef.current = setTimeout(() => {\n      socketRef.current.emit('stopTyping', username);\n    }, 3000);\n  };\n  const reactToMsg = (msgId, emoji) => {\n    socketRef.current.emit('reactMessage', msgId, emoji);\n  };\n  const handleInputEmojiSelect = emoji => {\n    setMessageInput(prev => prev + emoji);\n    setShowInputEmojiPicker(false);\n  };\n  const handleReactEmojiSelect = emoji => {\n    if (reactionPickerForMsgId) {\n      reactToMsg(reactionPickerForMsgId, emoji);\n      setReactionPickerForMsgId(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 500,\n      border: '1px solid #ccc',\n      padding: 10,\n      margin: 'auto',\n      background: \"#fafaff\",\n      borderRadius: 13\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      message: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"active-users-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Active Users (\", activeUsers.length, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: activeUsers.map((user, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, user + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n      typingUser: typingUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chat-input\",\n        placeholder: \"Type your message...\",\n        rows: 2,\n        value: messageInput,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"emoji-picker-btn\",\n        onClick: () => setShowInputEmojiPicker(!showInputEmojiPicker),\n        children: \"\\uD83D\\uDE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: () => sendMessage(messageInput),\n        disabled: !messageInput.trim(),\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), showInputEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n      onSelect: handleInputEmojiSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setSelectedFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendFile,\n        disabled: !selectedFile,\n        style: {\n          marginLeft: 8\n        },\n        children: \"Send File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messages.map(msg => {\n        var _messages$find;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          msg: {\n            ...msg,\n            reply: msg.replyTo ? ((_messages$find = messages.find(m => m.id === msg.replyTo)) === null || _messages$find === void 0 ? void 0 : _messages$find.text) || '' : null\n          },\n          onReactClick: () => setReactionPickerForMsgId(msg.id)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), reactionPickerForMsgId && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 100,\n        left: 50,\n        zIndex: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onSelect: handleReactEmojiSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReactionPickerForMsgId(null),\n        style: {\n          marginTop: 5\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"1VDVWO8tBX2TpZ9qwBcRS7YlRJQ=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Message","TypingIndicator","EmojiPicker","Toast","jsxDEV","_jsxDEV","Chat","username","_s","messages","setMessages","messageInput","setMessageInput","selectedFile","setSelectedFile","showInputEmojiPicker","setShowInputEmojiPicker","reactionPickerForMsgId","setReactionPickerForMsgId","typingUser","setTypingUser","activeUsers","setActiveUsers","notification","setNotification","messagesEndRef","socketRef","typingTimeoutRef","current","query","on","msg","m","find","existing","id","map","status","user","emit","msgId","senderSocketId","system","showNotification","users","clearTimeout","setTimeout","emoji","reactions","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","handleChange","e","target","value","handleKeyDown","key","shiftKey","preventDefault","trim","sendMessage","text","replyTo","message","Date","now","avatarUrl","sendFile","reader","FileReader","onload","base64Data","result","fileMessage","fileName","name","fileType","type","data","readAsDataURL","handleTyping","reactToMsg","handleInputEmojiSelect","prev","handleReactEmojiSelect","style","width","border","padding","margin","background","borderRadius","children","_jsxFileName","lineNumber","columnNumber","className","length","i","placeholder","rows","onChange","onKeyDown","onClick","disabled","onSelect","marginBottom","files","marginLeft","_messages$find","reply","onReactClick","ref","position","bottom","left","zIndex","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/Chat-App/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Message from './Message';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport Toast from './Toast';\r\n\r\nexport default function Chat({ username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [showInputEmojiPicker, setShowInputEmojiPicker] = useState(false);\r\n  const [reactionPickerForMsgId, setReactionPickerForMsgId] = useState(null);\r\n  const [typingUser, setTypingUser] = useState('');\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [notification, setNotification] = useState('');\r\n  const messagesEndRef = useRef();\r\n  const socketRef = useRef();\r\n  const typingTimeoutRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:3001', { query: { username } });\r\n\r\n    // Listen for regular messages\r\n    socketRef.current.on('message', (msg) => {\r\n      setMessages((m) => {\r\n        if (m.find(existing => existing.id === msg.id)) {\r\n          return m.map(existing => existing.id === msg.id ? { ...existing, status: msg.status } : existing);\r\n        }\r\n        return [...m, msg];\r\n      });\r\n\r\n      if (msg.user !== username) {\r\n        socketRef.current.emit('messageReceived', {\r\n          msgId: msg.id,\r\n          senderSocketId: msg.senderSocketId\r\n        });\r\n\r\n        socketRef.current.emit('readMessage', {\r\n          msgId: msg.id,\r\n          senderSocketId: msg.senderSocketId\r\n        });\r\n      }\r\n    });\r\n\r\n    // Listen for file messages\r\n    socketRef.current.on('fileMessage', (msg) => {\r\n      setMessages((m) => {\r\n        if (m.find(existing => existing.id === msg.id)) {\r\n          return m.map(existing => existing.id === msg.id ? { ...existing, status: msg.status } : existing);\r\n        }\r\n        return [...m, msg];\r\n      });\r\n\r\n      if (msg.user !== username) {\r\n        socketRef.current.emit('messageReceived', {\r\n          msgId: msg.id,\r\n          senderSocketId: msg.senderSocketId\r\n        });\r\n\r\n        socketRef.current.emit('readMessage', {\r\n          msgId: msg.id,\r\n          senderSocketId: msg.senderSocketId\r\n        });\r\n      }\r\n    });\r\n\r\n    // Listen for system messages (user joined/left)\r\n    socketRef.current.on('systemMessage', (msg) => {\r\n      setMessages((m) => [...m, { ...msg, system: true }]);\r\n    });\r\n\r\n    // Listen for status updates\r\n    socketRef.current.on('messageStatusUpdate', ({ msgId, status }) => {\r\n      setMessages((m) =>\r\n        m.map((msg) =>\r\n          msg.id === msgId ? { ...msg, status } : msg\r\n        )\r\n      );\r\n    });\r\n\r\n    socketRef.current.on('userJoined', (msg) => showNotification(msg));\r\n    socketRef.current.on('userLeft', (msg) => showNotification(msg));\r\n    socketRef.current.on('activeUsers', (users) => setActiveUsers(users));\r\n\r\n    socketRef.current.on('typing', (user) => {\r\n      setTypingUser(user);\r\n      clearTimeout(typingTimeoutRef.current);\r\n      typingTimeoutRef.current = setTimeout(() => setTypingUser(''), 4000);\r\n    });\r\n\r\n    socketRef.current.on('stopTyping', () => {\r\n      setTypingUser('');\r\n      clearTimeout(typingTimeoutRef.current);\r\n    });\r\n\r\n    socketRef.current.on('reactUpdate', ({ msgId, emoji }) =>\r\n      setMessages((m) =>\r\n        m.map((msg) =>\r\n          msg.id === msgId ? { ...msg, reactions: [...(msg.reactions || []), emoji] } : msg\r\n        )\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n      clearTimeout(typingTimeoutRef.current);\r\n    };\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const showNotification = (msg) => {\r\n    setNotification(msg);\r\n    setTimeout(() => setNotification(\"\"), 2200);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setMessageInput(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      if (messageInput.trim()) {\r\n        sendMessage(messageInput);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = (text, replyTo) => {\r\n    if (!text.trim()) return;\r\n\r\n    const message = {\r\n      id: Date.now(),\r\n      text,\r\n      user: username,\r\n      replyTo: replyTo || null,\r\n      avatarUrl: `https://ui-avatars.com/api/?name=${username}&background=random`,\r\n      senderSocketId: socketRef.current.id,\r\n      status: 'sent',\r\n    };\r\n\r\n    socketRef.current.emit('sendMessage', message);\r\n    setMessageInput('');\r\n    setShowInputEmojiPicker(false);\r\n    socketRef.current.emit('stopTyping', username);\r\n  };\r\n\r\n  const sendFile = () => {\r\n    if (!selectedFile) return;\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const base64Data = e.target.result;\r\n      const fileMessage = {\r\n        id: Date.now(),\r\n        user: username,\r\n        avatarUrl: `https://ui-avatars.com/api/?name=${username}&background=random`,\r\n        senderSocketId: socketRef.current.id,\r\n        fileName: selectedFile.name,\r\n        fileType: selectedFile.type,\r\n        data: base64Data,\r\n        status: 'sent',\r\n      };\r\n      socketRef.current.emit('sendFile', fileMessage);\r\n      setSelectedFile(null);\r\n    };\r\n    reader.readAsDataURL(selectedFile);\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (!socketRef.current) return;\r\n\r\n    socketRef.current.emit('typing', username);\r\n\r\n    clearTimeout(typingTimeoutRef.current);\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      socketRef.current.emit('stopTyping', username);\r\n    }, 3000);\r\n  };\r\n\r\n  const reactToMsg = (msgId, emoji) => {\r\n    socketRef.current.emit('reactMessage', msgId, emoji);\r\n  };\r\n\r\n  const handleInputEmojiSelect = (emoji) => {\r\n    setMessageInput((prev) => prev + emoji);\r\n    setShowInputEmojiPicker(false);\r\n  };\r\n\r\n  const handleReactEmojiSelect = (emoji) => {\r\n    if (reactionPickerForMsgId) {\r\n      reactToMsg(reactionPickerForMsgId, emoji);\r\n      setReactionPickerForMsgId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: 500, border: '1px solid #ccc', padding: 10, margin: 'auto', background: \"#fafaff\", borderRadius: 13 }}>\r\n      <Toast message={notification} />\r\n      <div className=\"active-users-container\">\r\n        <h4>Active Users ({activeUsers.length}):</h4>\r\n        <ul>\r\n          {activeUsers.map((user, i) => (\r\n            <li key={user + i}>{user}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <TypingIndicator typingUser={typingUser} />\r\n\r\n      <div className=\"input-container\">\r\n        <textarea\r\n          className=\"chat-input\"\r\n          placeholder=\"Type your message...\"\r\n          rows={2}\r\n          value={messageInput}\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <button className=\"emoji-picker-btn\" onClick={() => setShowInputEmojiPicker(!showInputEmojiPicker)}>😀</button>\r\n        <button\r\n          className=\"send-btn\"\r\n          onClick={() => sendMessage(messageInput)}\r\n          disabled={!messageInput.trim()}\r\n        >\r\n          ➤\r\n        </button>\r\n      </div>\r\n\r\n      {showInputEmojiPicker && <EmojiPicker onSelect={handleInputEmojiSelect} />}\r\n\r\n      <div style={{ marginBottom: 12 }}>\r\n        <input type=\"file\" onChange={(e) => setSelectedFile(e.target.files[0])} />\r\n        <button onClick={sendFile} disabled={!selectedFile} style={{ marginLeft: 8 }}>\r\n          Send File\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        {messages.map((msg) => (\r\n          <Message\r\n            key={msg.id}\r\n            msg={{\r\n              ...msg,\r\n              reply: msg.replyTo ? messages.find((m) => m.id === msg.replyTo)?.text || '' : null,\r\n            }}\r\n            onReactClick={() => setReactionPickerForMsgId(msg.id)}\r\n          />\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {reactionPickerForMsgId && (\r\n        <div style={{ position: 'fixed', bottom: 100, left: 50, zIndex: 100 }}>\r\n          <EmojiPicker onSelect={handleReactEmojiSelect} />\r\n          <button onClick={() => setReactionPickerForMsgId(null)} style={{ marginTop: 5 }}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}