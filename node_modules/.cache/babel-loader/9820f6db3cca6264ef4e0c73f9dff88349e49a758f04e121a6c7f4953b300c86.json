{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\Chat-App\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Message from './Message';\nimport TypingIndicator from './TypingIndicator';\nimport MessageInput from './MessageInput';\nimport EmojiPicker from './EmojiPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [typingUser, setTypingUser] = useState('');\n  const [userActivity, setUserActivity] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [showInputEmojiPicker, setShowInputEmojiPicker] = useState(false);\n  const [reactionPickerForMsgId, setReactionPickerForMsgId] = useState(null);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io('http://localhost:3001', {\n      query: {\n        username\n      }\n    });\n    socketRef.current.on('message', msg => {\n      setMessages(m => [...m, msg]);\n    });\n    socketRef.current.on('userJoined', msg => setUserActivity(msg));\n    socketRef.current.on('userLeft', msg => setUserActivity(msg));\n    socketRef.current.on('activeUsers', users => setActiveUsers(users));\n    socketRef.current.on('typing', user => setTypingUser(user));\n    socketRef.current.on('reactUpdate', ({\n      msgId,\n      emoji\n    }) => setMessages(m => m.map(msg => msg.id === msgId ? {\n      ...msg,\n      reactions: [...(msg.reactions || []), emoji]\n    } : msg)));\n    return () => {\n      socketRef.current.off('message');\n      socketRef.current.off('userJoined');\n      socketRef.current.off('userLeft');\n      socketRef.current.off('activeUsers');\n      socketRef.current.off('typing');\n      socketRef.current.off('reactUpdate');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    };\n  }, [username]);\n  const sendMessage = (text, replyTo) => {\n    if (!text.trim()) return;\n    socketRef.current.emit('sendMessage', {\n      id: Date.now(),\n      text,\n      user: username,\n      replyTo: replyTo || null\n    });\n  };\n  const handleTyping = () => {\n    socketRef.current.emit('typing', username);\n  };\n  const reactToMsg = (msgId, emoji) => {\n    socketRef.current.emit('reactMessage', msgId, emoji);\n  };\n\n  // Handle emoji insertion in input\n  const handleInputEmojiSelect = emoji => {\n    setMessageInput(prev => prev + emoji);\n    setShowInputEmojiPicker(false);\n  };\n\n  // Handle emoji reaction selection to message\n  const handleReactEmojiSelect = emoji => {\n    if (reactionPickerForMsgId) {\n      reactToMsg(reactionPickerForMsgId, emoji);\n      setReactionPickerForMsgId(null);\n    }\n  };\n  const handleSendClick = () => {\n    sendMessage(messageInput);\n    setMessageInput('');\n    setShowInputEmojiPicker(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 500,\n      border: '1px solid #ccc',\n      padding: 10,\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Active Users (\", activeUsers.length, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          paddingLeft: 0,\n          listStyle: 'none'\n        },\n        children: activeUsers.map((user, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, user + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userActivity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: messageInput,\n        onChange: e => setMessageInput(e.target.value),\n        onKeyPress: handleTyping,\n        rows: 3,\n        style: {\n          width: '100%',\n          padding: 8,\n          boxSizing: 'border-box'\n        },\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendClick,\n        disabled: !messageInput.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowInputEmojiPicker(!showInputEmojiPicker),\n        style: {\n          marginLeft: 10\n        },\n        children: showInputEmojiPicker ? 'Close Emoji Picker' : 'Open Emoji Picker'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), showInputEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onSelect: handleInputEmojiSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n      typingUser: typingUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(msg => {\n        var _messages$find;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          msg: {\n            ...msg,\n            reply: msg.replyTo ? ((_messages$find = messages.find(m => m.id === msg.replyTo)) === null || _messages$find === void 0 ? void 0 : _messages$find.text) || '' : null\n          },\n          onReactClick: () => setReactionPickerForMsgId(msg.id)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), reactionPickerForMsgId && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 100,\n        left: 50,\n        zIndex: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onSelect: handleReactEmojiSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReactionPickerForMsgId(null),\n        style: {\n          marginTop: 5\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"jcs5MRTw2Zm62IbGZGZTZwbXLC0=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Message","TypingIndicator","MessageInput","EmojiPicker","jsxDEV","_jsxDEV","Chat","username","_s","messages","setMessages","typingUser","setTypingUser","userActivity","setUserActivity","activeUsers","setActiveUsers","messageInput","setMessageInput","showInputEmojiPicker","setShowInputEmojiPicker","reactionPickerForMsgId","setReactionPickerForMsgId","socketRef","current","query","on","msg","m","users","user","msgId","emoji","map","id","reactions","off","disconnect","sendMessage","text","replyTo","trim","emit","Date","now","handleTyping","reactToMsg","handleInputEmojiSelect","prev","handleReactEmojiSelect","handleSendClick","style","width","border","padding","margin","children","length","fileName","_jsxFileName","lineNumber","columnNumber","paddingLeft","listStyle","i","marginBottom","value","onChange","e","target","onKeyPress","rows","boxSizing","placeholder","onClick","disabled","marginLeft","onSelect","_messages$find","reply","find","onReactClick","position","bottom","left","zIndex","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/Chat-App/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Message from './Message';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport MessageInput from './MessageInput';\r\nimport EmojiPicker from './EmojiPicker';\r\n\r\nexport default function Chat({ username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [typingUser, setTypingUser] = useState('');\r\n  const [userActivity, setUserActivity] = useState('');\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [showInputEmojiPicker, setShowInputEmojiPicker] = useState(false);\r\n  const [reactionPickerForMsgId, setReactionPickerForMsgId] = useState(null);\r\n\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:3001', { query: { username } });\r\n\r\n    socketRef.current.on('message', (msg) => {\r\n      setMessages((m) => [...m, msg]);\r\n    });\r\n    socketRef.current.on('userJoined', (msg) => setUserActivity(msg));\r\n    socketRef.current.on('userLeft', (msg) => setUserActivity(msg));\r\n    socketRef.current.on('activeUsers', (users) => setActiveUsers(users));\r\n    socketRef.current.on('typing', (user) => setTypingUser(user));\r\n    socketRef.current.on('reactUpdate', ({ msgId, emoji }) =>\r\n      setMessages((m) =>\r\n        m.map((msg) =>\r\n          msg.id === msgId ? { ...msg, reactions: [...(msg.reactions || []), emoji] } : msg\r\n        )\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      socketRef.current.off('message');\r\n      socketRef.current.off('userJoined');\r\n      socketRef.current.off('userLeft');\r\n      socketRef.current.off('activeUsers');\r\n      socketRef.current.off('typing');\r\n      socketRef.current.off('reactUpdate');\r\n      socketRef.current.disconnect();\r\n      socketRef.current = null;\r\n    };\r\n  }, [username]);\r\n\r\n  const sendMessage = (text, replyTo) => {\r\n    if (!text.trim()) return;\r\n    socketRef.current.emit('sendMessage', {\r\n      id: Date.now(),\r\n      text,\r\n      user: username,\r\n      replyTo: replyTo || null,\r\n    });\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    socketRef.current.emit('typing', username);\r\n  };\r\n\r\n  const reactToMsg = (msgId, emoji) => {\r\n    socketRef.current.emit('reactMessage', msgId, emoji);\r\n  };\r\n\r\n  // Handle emoji insertion in input\r\n  const handleInputEmojiSelect = (emoji) => {\r\n    setMessageInput((prev) => prev + emoji);\r\n    setShowInputEmojiPicker(false);\r\n  };\r\n\r\n  // Handle emoji reaction selection to message\r\n  const handleReactEmojiSelect = (emoji) => {\r\n    if (reactionPickerForMsgId) {\r\n      reactToMsg(reactionPickerForMsgId, emoji);\r\n      setReactionPickerForMsgId(null);\r\n    }\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    sendMessage(messageInput);\r\n    setMessageInput('');\r\n    setShowInputEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: 500, border: '1px solid #ccc', padding: 10, margin: 'auto' }}>\r\n      <div>\r\n        <h4>Active Users ({activeUsers.length}):</h4>\r\n        <ul style={{ paddingLeft: 0, listStyle: 'none' }}>\r\n          {activeUsers.map((user, i) => (\r\n            <li key={user + i}>{user}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>{userActivity}</div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <textarea\r\n          value={messageInput}\r\n          onChange={(e) => setMessageInput(e.target.value)}\r\n          onKeyPress={handleTyping}\r\n          rows={3}\r\n          style={{ width: '100%', padding: 8, boxSizing: 'border-box' }}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={handleSendClick} disabled={!messageInput.trim()}>\r\n          Send\r\n        </button>\r\n        <button onClick={() => setShowInputEmojiPicker(!showInputEmojiPicker)} style={{ marginLeft: 10 }}>\r\n          {showInputEmojiPicker ? 'Close Emoji Picker' : 'Open Emoji Picker'}\r\n        </button>\r\n        {showInputEmojiPicker && <EmojiPicker onSelect={handleInputEmojiSelect} />}\r\n      </div>\r\n\r\n      <TypingIndicator typingUser={typingUser} />\r\n\r\n      <div>\r\n        {messages.map((msg) => (\r\n          <Message\r\n            key={msg.id}\r\n            msg={{\r\n              ...msg,\r\n              reply: msg.replyTo ? messages.find((m) => m.id === msg.replyTo)?.text || '' : null,\r\n            }}\r\n            onReactClick={() => setReactionPickerForMsgId(msg.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {reactionPickerForMsgId && (\r\n        <div style={{ position: 'fixed', bottom: 100, left: 50, zIndex: 100 }}>\r\n          <EmojiPicker onSelect={handleReactEmojiSelect} />\r\n          <button onClick={() => setReactionPickerForMsgId(null)} style={{ marginTop: 5 }}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}