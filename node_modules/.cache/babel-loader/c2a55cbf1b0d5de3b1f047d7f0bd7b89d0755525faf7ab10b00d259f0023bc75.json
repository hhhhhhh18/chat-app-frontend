{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\Chat-App\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Message from './Message';\nimport TypingIndicator from './TypingIndicator';\nimport EmojiPicker from './EmojiPicker';\nimport Toast from './Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [showInputEmojiPicker, setShowInputEmojiPicker] = useState(false);\n  const [reactionPickerForMsgId, setReactionPickerForMsgId] = useState(null);\n  const [typingUser, setTypingUser] = useState('');\n  const [userActivity, setUserActivity] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [notification, setNotification] = useState('');\n  const messagesEndRef = useRef();\n  const socketRef = useRef();\n  const typingTimeoutRef = useRef();\n  useEffect(() => {\n    socketRef.current = io('http://localhost:3001', {\n      query: {\n        username\n      }\n    });\n    socketRef.current.on('message', msg => {\n      setMessages(m => {\n        if (m.find(existing => existing.id === msg.id)) {\n          return m.map(existing => existing.id === msg.id ? {\n            ...existing,\n            status: msg.status\n          } : existing);\n        } else {\n          return [...m, msg];\n        }\n      });\n      if (msg.user !== username) {\n        socketRef.current.emit('readMessage', msg.id);\n      }\n    });\n    socketRef.current.on('messageStatusUpdate', ({\n      msgId,\n      status\n    }) => {\n      setMessages(m => m.map(msg => msg.id === msgId ? {\n        ...msg,\n        status\n      } : msg));\n    });\n    socketRef.current.on('userJoined', msg => showNotification(msg));\n    socketRef.current.on('userLeft', msg => showNotification(msg));\n    socketRef.current.on('activeUsers', users => setActiveUsers(users));\n    socketRef.current.on('typing', user => {\n      setTypingUser(user);\n      clearTimeout(typingTimeoutRef.current);\n      typingTimeoutRef.current = setTimeout(() => setTypingUser(''), 4000);\n    });\n    socketRef.current.on('stopTyping', () => {\n      setTypingUser('');\n      clearTimeout(typingTimeoutRef.current);\n    });\n    socketRef.current.on('reactUpdate', ({\n      msgId,\n      emoji\n    }) => setMessages(m => m.map(msg => msg.id === msgId ? {\n      ...msg,\n      reactions: [...(msg.reactions || []), emoji]\n    } : msg)));\n    return () => {\n      socketRef.current.disconnect();\n      clearTimeout(typingTimeoutRef.current);\n    };\n  }, [username]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const showNotification = msg => {\n    setNotification(msg);\n    setTimeout(() => setNotification(\"\"), 2200);\n  };\n  const sendMessage = (text, replyTo) => {\n    if (!text.trim()) return;\n    const message = {\n      id: Date.now(),\n      text,\n      user: username,\n      replyTo: replyTo || null,\n      avatarUrl: `https://ui-avatars.com/api/?name=${username}&background=random`,\n      status: 'sent'\n    };\n    socketRef.current.emit('sendMessage', message);\n  };\n  const handleTyping = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit('typing', username);\n    clearTimeout(typingTimeoutRef.current);\n    typingTimeoutRef.current = setTimeout(() => {\n      socketRef.current.emit('stopTyping', username);\n    }, 3000);\n  };\n  const reactToMsg = (msgId, emoji) => {\n    socketRef.current.emit('reactMessage', msgId, emoji);\n  };\n  const handleInputEmojiSelect = emoji => {\n    setMessageInput(prev => prev + emoji);\n    setShowInputEmojiPicker(false);\n  };\n  const handleReactEmojiSelect = emoji => {\n    if (reactionPickerForMsgId) {\n      reactToMsg(reactionPickerForMsgId, emoji);\n      setReactionPickerForMsgId(null);\n    }\n  };\n  const handleSendClick = () => {\n    sendMessage(messageInput);\n    setMessageInput('');\n    setShowInputEmojiPicker(false);\n    socketRef.current.emit('stopTyping', username);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 500,\n      border: '1px solid #ccc',\n      padding: 10,\n      margin: 'auto',\n      background: \"#fafaff\",\n      borderRadius: 13\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      message: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Active Users (\", activeUsers.length, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          paddingLeft: 0,\n          listStyle: 'none',\n          marginBottom: 7\n        },\n        children: activeUsers.map((user, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, user + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n      typingUser: typingUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 17\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: messageInput,\n        onChange: e => {\n          setMessageInput(e.target.value);\n          handleTyping();\n        },\n        rows: 3,\n        className: \"chat-input\",\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendClick,\n        disabled: !messageInput.trim(),\n        className: \"send-btn\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowInputEmojiPicker(!showInputEmojiPicker),\n        className: \"emoji-picker-btn\",\n        title: \"Pick Emoji\",\n        children: \"\\uD83D\\uDE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), showInputEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onSelect: handleInputEmojiSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [messages.map(msg => {\n        var _messages$find;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          msg: {\n            ...msg,\n            reply: msg.replyTo ? ((_messages$find = messages.find(m => m.id === msg.replyTo)) === null || _messages$find === void 0 ? void 0 : _messages$find.text) || '' : null\n          },\n          onReactClick: () => setReactionPickerForMsgId(msg.id)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), reactionPickerForMsgId && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 100,\n        left: 50,\n        zIndex: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onSelect: handleReactEmojiSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReactionPickerForMsgId(null),\n        style: {\n          marginTop: 5\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"7pv3Qrx9UcaQLmn/PXVnE/FJF2w=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Message","TypingIndicator","EmojiPicker","Toast","jsxDEV","_jsxDEV","Chat","username","_s","messages","setMessages","messageInput","setMessageInput","showInputEmojiPicker","setShowInputEmojiPicker","reactionPickerForMsgId","setReactionPickerForMsgId","typingUser","setTypingUser","userActivity","setUserActivity","activeUsers","setActiveUsers","notification","setNotification","messagesEndRef","socketRef","typingTimeoutRef","current","query","on","msg","m","find","existing","id","map","status","user","emit","msgId","showNotification","users","clearTimeout","setTimeout","emoji","reactions","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","sendMessage","text","replyTo","trim","message","Date","now","avatarUrl","handleTyping","reactToMsg","handleInputEmojiSelect","prev","handleReactEmojiSelect","handleSendClick","style","width","border","padding","margin","background","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","length","paddingLeft","listStyle","marginBottom","i","value","onChange","e","target","rows","className","placeholder","onClick","disabled","title","onSelect","_messages$find","reply","onReactClick","ref","position","bottom","left","zIndex","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/Chat-App/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Message from './Message';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport EmojiPicker from './EmojiPicker';\r\nimport Toast from './Toast';\r\n\r\nexport default function Chat({ username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageInput, setMessageInput] = useState('');\r\n  const [showInputEmojiPicker, setShowInputEmojiPicker] = useState(false);\r\n  const [reactionPickerForMsgId, setReactionPickerForMsgId] = useState(null);\r\n  const [typingUser, setTypingUser] = useState('');\r\n  const [userActivity, setUserActivity] = useState('');\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [notification, setNotification] = useState('');\r\n  const messagesEndRef = useRef();\r\n  const socketRef = useRef();\r\n  const typingTimeoutRef = useRef();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:3001', { query: { username } });\r\nsocketRef.current.on('message', (msg) => {\r\n  setMessages((m) => {\r\n    if (m.find(existing => existing.id === msg.id)) {\r\n      return m.map(existing => existing.id === msg.id ? { ...existing, status: msg.status } : existing);\r\n    } else {\r\n      return [...m, msg];\r\n    }\r\n  });\r\n\r\n  if (msg.user !== username) {\r\n    socketRef.current.emit('readMessage', msg.id);\r\n  }\r\n});\r\n\r\nsocketRef.current.on('messageStatusUpdate', ({ msgId, status }) => {\r\n  setMessages((m) =>\r\n    m.map((msg) =>\r\n      msg.id === msgId ? { ...msg, status } : msg\r\n    )\r\n  );\r\n});\r\n\r\n\r\n    socketRef.current.on('userJoined', (msg) => showNotification(msg));\r\n    socketRef.current.on('userLeft', (msg) => showNotification(msg));\r\n    socketRef.current.on('activeUsers', (users) => setActiveUsers(users));\r\n\r\n    socketRef.current.on('typing', (user) => {\r\n      setTypingUser(user);\r\n      clearTimeout(typingTimeoutRef.current);\r\n      typingTimeoutRef.current = setTimeout(() => setTypingUser(''), 4000);\r\n    });\r\n\r\n    socketRef.current.on('stopTyping', () => {\r\n      setTypingUser('');\r\n      clearTimeout(typingTimeoutRef.current);\r\n    });\r\n\r\n    socketRef.current.on('reactUpdate', ({ msgId, emoji }) =>\r\n      setMessages((m) =>\r\n        m.map((msg) =>\r\n          msg.id === msgId ? { ...msg, reactions: [...(msg.reactions || []), emoji] } : msg\r\n        )\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n      clearTimeout(typingTimeoutRef.current);\r\n    };\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const showNotification = (msg) => {\r\n    setNotification(msg);\r\n    setTimeout(() => setNotification(\"\"), 2200);\r\n  };\r\n\r\n  const sendMessage = (text, replyTo) => {\r\n    if (!text.trim()) return;\r\n    const message = {\r\n      id: Date.now(),\r\n      text,\r\n      user: username,\r\n      replyTo: replyTo || null,\r\n      avatarUrl: `https://ui-avatars.com/api/?name=${username}&background=random`,\r\n      status:'sent',\r\n    };\r\n    socketRef.current.emit('sendMessage', message);\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit('typing', username);\r\n\r\n    clearTimeout(typingTimeoutRef.current);\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      socketRef.current.emit('stopTyping', username);\r\n    }, 3000);\r\n  };\r\n\r\n  const reactToMsg = (msgId, emoji) => {\r\n    socketRef.current.emit('reactMessage', msgId, emoji);\r\n  };\r\n\r\n  const handleInputEmojiSelect = (emoji) => {\r\n    setMessageInput((prev) => prev + emoji);\r\n    setShowInputEmojiPicker(false);\r\n  };\r\n\r\n  const handleReactEmojiSelect = (emoji) => {\r\n    if (reactionPickerForMsgId) {\r\n      reactToMsg(reactionPickerForMsgId, emoji);\r\n      setReactionPickerForMsgId(null);\r\n    }\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    sendMessage(messageInput);\r\n    setMessageInput('');\r\n    setShowInputEmojiPicker(false);\r\n    socketRef.current.emit('stopTyping', username);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: 500, border: '1px solid #ccc', padding: 10, margin: 'auto', background: \"#fafaff\", borderRadius: 13 }}>\r\n      <Toast message={notification} />\r\n\r\n      <div>\r\n        <h4>Active Users ({activeUsers.length}):</h4>\r\n        <ul style={{ paddingLeft: 0, listStyle: 'none', marginBottom: 7 }}>\r\n          {activeUsers.map((user, i) => (\r\n            <li key={user + i}>{user}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <TypingIndicator typingUser={typingUser} />\r\n\r\n      <div style={{ marginBottom: 17 }}>\r\n        <textarea\r\n          value={messageInput}\r\n          onChange={(e) => {\r\n            setMessageInput(e.target.value);\r\n            handleTyping();\r\n          }}\r\n          rows={3}\r\n          className=\"chat-input\"\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button onClick={handleSendClick} disabled={!messageInput.trim()} className=\"send-btn\">\r\n          Send\r\n        </button>\r\n        <button onClick={() => setShowInputEmojiPicker(!showInputEmojiPicker)} className=\"emoji-picker-btn\" title=\"Pick Emoji\">\r\n          😀\r\n        </button>\r\n        {showInputEmojiPicker && <EmojiPicker onSelect={handleInputEmojiSelect} />}\r\n      </div>\r\n\r\n      <div>\r\n        {messages.map((msg) => (\r\n          <Message\r\n            key={msg.id}\r\n            msg={{\r\n              ...msg,\r\n              reply: msg.replyTo ? messages.find((m) => m.id === msg.replyTo)?.text || '' : null,\r\n            }}\r\n            onReactClick={() => setReactionPickerForMsgId(msg.id)}\r\n          />\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {reactionPickerForMsgId && (\r\n        <div style={{ position: 'fixed', bottom: 100, left: 50, zIndex: 100 }}>\r\n          <EmojiPicker onSelect={handleReactEmojiSelect} />\r\n          <button onClick={() => setReactionPickerForMsgId(null)} style={{ marginTop: 5 }}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}