{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\Chat-App\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Message from './Message';\nimport TypingIndicator from './TypingIndicator';\nimport MessageInput from './MessageInput';\nimport EmojiPicker from './EmojiPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  username\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [typingUser, setTypingUser] = useState('');\n  const [userActivity, setUserActivity] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [replyingTo, setReplyingTo] = useState(null);\n  const socketRef = useRef();\n  const [lastMsgId, setLastMsgId] = useState(null); // track last message for emoji reactions\n\n  useEffect(() => {\n    socketRef.current = io('http://localhost:3001', {\n      query: {\n        username\n      }\n    });\n    socketRef.current.on('message', msg => {\n      setMessages(m => [...m, msg]);\n      setLastMsgId(msg.id); // update last message id on each incoming message\n    });\n    socketRef.current.on('userJoined', msg => setUserActivity(msg));\n    socketRef.current.on('userLeft', msg => setUserActivity(msg));\n    socketRef.current.on('activeUsers', users => setActiveUsers(users));\n    socketRef.current.on('typing', user => setTypingUser(user));\n    socketRef.current.on('reactUpdate', ({\n      msgId,\n      emoji\n    }) => setMessages(m => m.map(msg => msg.id === msgId ? {\n      ...msg,\n      reactions: [...(msg.reactions || []), emoji]\n    } : msg)));\n    return () => {\n      socketRef.current.off('message');\n      socketRef.current.off('userJoined');\n      socketRef.current.off('userLeft');\n      socketRef.current.off('activeUsers');\n      socketRef.current.off('typing');\n      socketRef.current.off('reactUpdate');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    };\n  }, [username]);\n  const sendMessage = (text, replyTo) => {\n    socketRef.current.emit('sendMessage', {\n      id: Date.now(),\n      text,\n      user: username,\n      replyTo: replyTo || null\n    });\n  };\n  const handleTyping = () => {\n    socketRef.current.emit('typing', username);\n  };\n  const reactToMsg = (msgId, emoji) => {\n    socketRef.current.emit('reactMessage', msgId, emoji);\n  };\n  const handleEmojiSelect = emoji => {\n    if (lastMsgId) {\n      reactToMsg(lastMsgId, emoji);\n    }\n    setShowEmojiPicker(false); // close picker after selection\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 400,\n      border: '1px solid #ccc',\n      padding: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Active Users (\", activeUsers.length, \"):\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          paddingLeft: 0,\n          listStyle: 'none'\n        },\n        children: activeUsers.map((user, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user\n        }, user + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userActivity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      sendMessage: sendMessage,\n      handleTyping: handleTyping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowEmojiPicker(!showEmojiPicker),\n      children: showEmojiPicker ? 'Close Emoji Picker' : 'Open Emoji Picker'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n      onSelect: handleEmojiSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n      typingUser: typingUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(msg => {\n        var _messages$find;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          msg: {\n            ...msg,\n            reply: msg.replyTo ? ((_messages$find = messages.find(m => m.id === msg.replyTo)) === null || _messages$find === void 0 ? void 0 : _messages$find.text) || '' : null\n          },\n          isReplying: replyingTo === msg.id,\n          setReplyingTo: setReplyingTo,\n          sendReply: sendMessage,\n          reactToMsg: reactToMsg\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"WMDTESvjGaeyoyA0B6Q+iPXn/zU=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Message","TypingIndicator","MessageInput","EmojiPicker","jsxDEV","_jsxDEV","Chat","username","_s","messages","setMessages","typingUser","setTypingUser","userActivity","setUserActivity","activeUsers","setActiveUsers","showEmojiPicker","setShowEmojiPicker","replyingTo","setReplyingTo","socketRef","lastMsgId","setLastMsgId","current","query","on","msg","m","id","users","user","msgId","emoji","map","reactions","off","disconnect","sendMessage","text","replyTo","emit","Date","now","handleTyping","reactToMsg","handleEmojiSelect","style","width","border","padding","children","length","fileName","_jsxFileName","lineNumber","columnNumber","paddingLeft","listStyle","i","onClick","onSelect","_messages$find","reply","find","isReplying","sendReply","_c","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/Chat-App/client/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Message from './Message';\r\nimport TypingIndicator from './TypingIndicator';\r\nimport MessageInput from './MessageInput';\r\nimport EmojiPicker from './EmojiPicker';\r\n\r\nexport default function Chat({ username }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [typingUser, setTypingUser] = useState('');\r\n  const [userActivity, setUserActivity] = useState('');\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n\r\n  const socketRef = useRef();\r\n  const [lastMsgId, setLastMsgId] = useState(null); // track last message for emoji reactions\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:3001', { query: { username } });\r\n\r\n    socketRef.current.on('message', (msg) => {\r\n      setMessages((m) => [...m, msg]);\r\n      setLastMsgId(msg.id); // update last message id on each incoming message\r\n    });\r\n    socketRef.current.on('userJoined', (msg) => setUserActivity(msg));\r\n    socketRef.current.on('userLeft', (msg) => setUserActivity(msg));\r\n    socketRef.current.on('activeUsers', (users) => setActiveUsers(users));\r\n    socketRef.current.on('typing', (user) => setTypingUser(user));\r\n    socketRef.current.on('reactUpdate', ({ msgId, emoji }) =>\r\n      setMessages((m) =>\r\n        m.map((msg) =>\r\n          msg.id === msgId ? { ...msg, reactions: [...(msg.reactions || []), emoji] } : msg\r\n        )\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      socketRef.current.off('message');\r\n      socketRef.current.off('userJoined');\r\n      socketRef.current.off('userLeft');\r\n      socketRef.current.off('activeUsers');\r\n      socketRef.current.off('typing');\r\n      socketRef.current.off('reactUpdate');\r\n      socketRef.current.disconnect();\r\n      socketRef.current = null;\r\n    };\r\n  }, [username]);\r\n\r\n  const sendMessage = (text, replyTo) => {\r\n    socketRef.current.emit('sendMessage', {\r\n      id: Date.now(),\r\n      text,\r\n      user: username,\r\n      replyTo: replyTo || null,\r\n    });\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    socketRef.current.emit('typing', username);\r\n  };\r\n\r\n  const reactToMsg = (msgId, emoji) => {\r\n    socketRef.current.emit('reactMessage', msgId, emoji);\r\n  };\r\n\r\n  const handleEmojiSelect = (emoji) => {\r\n    if (lastMsgId) {\r\n      reactToMsg(lastMsgId, emoji);\r\n    }\r\n    setShowEmojiPicker(false); // close picker after selection\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: 400, border: '1px solid #ccc', padding: 10 }}>\r\n      <div>\r\n        <h4>Active Users ({activeUsers.length}):</h4>\r\n        <ul style={{ paddingLeft: 0, listStyle: 'none' }}>\r\n          {activeUsers.map((user, i) => (\r\n            <li key={user + i}>{user}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>{userActivity}</div>\r\n\r\n      <MessageInput sendMessage={sendMessage} handleTyping={handleTyping} />\r\n\r\n      <button onClick={() => setShowEmojiPicker(!showEmojiPicker)}>\r\n        {showEmojiPicker ? 'Close Emoji Picker' : 'Open Emoji Picker'}\r\n      </button>\r\n\r\n      {showEmojiPicker && <EmojiPicker onSelect={handleEmojiSelect} />}\r\n\r\n      <TypingIndicator typingUser={typingUser} />\r\n\r\n      <div>\r\n        {messages.map((msg) => (\r\n          <Message\r\n            key={msg.id}\r\n            msg={{\r\n              ...msg,\r\n              reply: msg.replyTo ? messages.find((m) => m.id === msg.replyTo)?.text || '' : null,\r\n            }}\r\n            isReplying={replyingTo === msg.id}\r\n            setReplyingTo={setReplyingTo}\r\n            sendReply={sendMessage}\r\n            reactToMsg={reactToMsg}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}