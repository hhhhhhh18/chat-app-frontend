{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\OneDrive\\\\Desktop\\\\Chat-App\\\\client\\\\src\\\\components\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EmojiPicker from './EmojiPicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Message({\n  msg,\n  reactToMsg,\n  sendReply\n}) {\n  _s();\n  const [showReply, setShowReply] = useState(false);\n  const [showEmojis, setShowEmojis] = useState(false);\n  const [replyText, setReplyText] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      borderBottom: '1px solid #eee',\n      margin: '4px 0',\n      padding: '2px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: msg.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \":\", msg.reply && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontStyle: 'italic',\n        fontSize: 12\n      },\n      children: [\"\\u21AA\\uFE0F Reply: \", msg.reply]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", msg.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), msg.reactions && msg.reactions.map((e, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: e\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 53\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowReply(!showReply),\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowEmojis(!showEmojis),\n      children: \"React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), showEmojis && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n      onSelect: emoji => {\n        reactToMsg(msg.id, emoji.native);\n        setShowEmojis(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), showReply && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        if (replyText) sendReply(replyText, msg.id);\n        setReplyText('');\n        setShowReply(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: replyText,\n        onChange: e => setReplyText(e.target.value),\n        placeholder: \"Type your reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Message, \"PScO2s/JZDvJrvJGXRKQR8lzvC8=\");\n_c = Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","EmojiPicker","jsxDEV","_jsxDEV","Message","msg","reactToMsg","sendReply","_s","showReply","setShowReply","showEmojis","setShowEmojis","replyText","setReplyText","style","borderBottom","margin","padding","children","user","fileName","_jsxFileName","lineNumber","columnNumber","reply","fontStyle","fontSize","text","reactions","map","e","i","onClick","onSelect","emoji","id","native","onSubmit","preventDefault","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/harsh/OneDrive/Desktop/Chat-App/client/src/components/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport EmojiPicker from './EmojiPicker';\r\n\r\nexport default function Message({ msg, reactToMsg, sendReply }) {\r\n  const [showReply, setShowReply] = useState(false);\r\n  const [showEmojis, setShowEmojis] = useState(false);\r\n  const [replyText, setReplyText] = useState('');\r\n\r\n  return (\r\n    <div style={{ borderBottom: '1px solid #eee', margin: '4px 0', padding: '2px 0' }}>\r\n      <strong>{msg.user}</strong>:\r\n      {msg.reply && (\r\n        <div style={{ fontStyle: 'italic', fontSize: 12 }}>↪️ Reply: {msg.reply}</div>\r\n      )}\r\n      <span> {msg.text}</span>\r\n      {msg.reactions && msg.reactions.map((e, i) => <span key={i}>{e}</span>)}\r\n      <button onClick={() => setShowReply(!showReply)}>Reply</button>\r\n      <button onClick={() => setShowEmojis(!showEmojis)}>React</button>\r\n      {showEmojis &&\r\n        <EmojiPicker onSelect={emoji => {\r\n          reactToMsg(msg.id, emoji.native);\r\n          setShowEmojis(false);\r\n        }} />\r\n      }\r\n      {showReply &&\r\n        <form onSubmit={e => {\r\n          e.preventDefault();\r\n          if (replyText) sendReply(replyText, msg.id);\r\n          setReplyText('');\r\n          setShowReply(false);\r\n        }}>\r\n          <input\r\n            value={replyText}\r\n            onChange={e => setReplyText(e.target.value)}\r\n            placeholder=\"Type your reply\"\r\n          />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}